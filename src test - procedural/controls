# key: [function, argument]
# controls[key][0]( controls[key][1] )

scale=5
i = np.array((1,0,0))*scale
j = np.array((0,1,0))*scale
k = np.array((0,0,1))*scale

CAMERA_FULL_CONTROLS = {
    K_LEFTBRACKET: [self.cam.move, k ],
    K_RIGHTBRACKET: [self.cam.move, -k ],
    K_z: [self.cam.change_zoom, -5],
    K_x: [self.cam.change_zoom, 5],
    K_UP: [self.cam.move, j ],
    K_DOWN: [self.cam.move, -j ],
    K_RIGHT: [self.cam.move, i ],
    K_LEFT: [self.cam.move, -i ],
    K_SPACE: [self.dots.read_points, 0],
    K_w: [self.cam.turn , -k ], # roll
    K_s: [self.cam.turn , k  ], # roll
    K_a: [self.cam.turn , j  ], # pitch
    K_d: [self.cam.turn , -j ], # pitch
    K_q: [self.cam.turn , i  ], # yaw
    K_e: [self.cam.turn , -i ], # yaw
}

OBJECT_CONTROLS = {
                    K_UP: [self.cam.move, k ],
                    K_DOWN: [self.cam.move, -k ],
                    K_z: [self.cam.change_zoom, -5],
                    K_x: [self.cam.change_zoom, 5],
                    K_w: [self.dots.rotate , k ], # roll
                    K_s: [self.dots.rotate , -k  ], # roll
                    K_a: [self.dots.rotate , -j  ], # pitch
                    K_d: [self.dots.rotate , j ], # pitch
                    K_q: [self.dots.rotate , -i  ], # yaw
                    K_e: [self.dots.rotate , i ], # yaw
        }
